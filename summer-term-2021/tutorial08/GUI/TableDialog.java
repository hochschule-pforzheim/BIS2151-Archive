/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tutorial08.GUI;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import tutorial08.logic.Bike;
import tutorial08.logic.BikeManager;

/**
 *
 * @author Jonathan Hinkel
 */
public class TableDialog extends javax.swing.JDialog {

    /**
     * Creates new form TableDialog
     */
    public TableDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        populateTable(); 
    }
    
    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tableBikes.getModel(); 
        ArrayList<Bike> localBikes = BikeManager.getBikes(); 
        
        //remove all old rows
        for(int i = model.getRowCount() - 1; i >= 0;  i--) {
            model.removeRow(i); 
        }
        
        //add all bikes from localBikes into the table
        Object rowData[] = new Object[3]; 
        for(int i = 0; i < localBikes.size();  i++) {
            rowData[0] = localBikes.get(i).getBikeID(); 
            rowData[1] = localBikes.get(i).getDescription(); 
            rowData[2] = localBikes.get(i).getPrice(); 
            model.addRow(rowData); 
        }
    }
    
    private boolean validInput() {
        try{
            double price = Double.parseDouble(textPrice.getText()); 
            return true; 
        }
        catch(NumberFormatException e) {
            System.out.println("No valid price!");
            return false; 
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBikes = new javax.swing.JTable();
        textDesc = new javax.swing.JTextField();
        buttonCreate = new javax.swing.JButton();
        textPrice = new javax.swing.JTextField();
        buttonDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        labelTitle.setText("Welcome to the Bike Manager!");

        tableBikes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Description", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableBikes.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tableBikesPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(tableBikes);

        textDesc.setText("Description");

        buttonCreate.setText("CREATE");
        buttonCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCreateActionPerformed(evt);
            }
        });

        textPrice.setText("Price");

        buttonDelete.setText("DELETE");
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelTitle)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(textDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonCreate))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonDelete)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(labelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonCreate)
                    .addComponent(textPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonDelete)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCreateActionPerformed
        if(validInput()) {
            String desc = textDesc.getText();
            double price = Double.parseDouble(textPrice.getText());
            BikeManager.addBike(new Bike(desc, price)); 
            populateTable(); 
        }
    }//GEN-LAST:event_buttonCreateActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableBikes.getModel(); 
        int row = tableBikes.getSelectedRow(); 
        int id = (int) model.getValueAt(row, 0); 
        BikeManager.deleteBike(id);
        populateTable(); 
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void tableBikesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tableBikesPropertyChange
        if(evt.getPropertyName().equals("tableCellEditor")) {
            if(tableBikes.isEditing()) {
                //user has started editing. No need to do something just yet.
            }
            else {
                DefaultTableModel model = (DefaultTableModel) tableBikes.getModel(); 
                int row = tableBikes.getSelectedRow(); 
                int id = (int) model.getValueAt(row, 0); 
                String desc = (String) model.getValueAt(row, 1); 
                double price = (double) model.getValueAt(row, 2); 
                BikeManager.updateBike(id, desc, price);
                populateTable(); 
            }
        }
    }//GEN-LAST:event_tableBikesPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TableDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TableDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TableDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TableDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TableDialog dialog = new TableDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCreate;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JTable tableBikes;
    private javax.swing.JTextField textDesc;
    private javax.swing.JTextField textPrice;
    // End of variables declaration//GEN-END:variables
}
